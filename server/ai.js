
async function analyzeWithAI() {
    const prompt = "Проект: Разработка мобильного приложения для учета личных финансов. Описание: Необходимо создать кроссплатформенное мобильное приложение (iOS/Android) для учета доходов и расходов с возможностью визуализации статистики (графики, категории) и напоминаниями о платежах. Отчет по выполненным этапам: Этап1: Проектирование UI/UX Отчет: Проведен анализ конкурентов (MoneyLover, ZenMoney). Созданы wireframes в Figma (15 экранов, включая главную страницу, добавление транзакций, настройки). Утвержден дизайн-макет с заказчиком. Проблемы: Задержка на 2 дня из-за изменений в ТЗ (добавили темную тему). Этап 2: Бэкенд для синхронизации данных Отчет: Настроен Firebase (аутентификация, Firestore для хранения транзакций). Реализована API-интеграция с банком (Tinkoff API для автоматического импорта операций).Добавлена шифрование敏感 данных (AES-256). Проблемы: Ограничения Tinkoff API (лимит 100 запросов/час). Этап 3: Тестирование MVP Отчет: Протестировано на 5 устройствах (Android 10-13, iOS 15-16). Исправлены баги: Утечка памяти при работе с графиками. Крах приложения при отмене OAuth-авторизации. Сбор feedback от 20 тестовых пользователей. Проблемы: Низкая производительность на iPhone 8 (оптимизировано)."
  try {
    const response = await fetch('http://localhost:11434/api/generate', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        model: 'custom_vikhr',  // Или 'phi3:mini'
        prompt: prompt,
        stream: false  // Для простого ответа
      })
    });
    const data = await response.json();
    return data.response;
  } catch (error) {
    console.error('Ошибка запроса к Ollama:', error);
    return "Не удалось проанализировать отчёт.";
  }
}

// Пример вызова
analyzeWithAI()
  .then(response => console.log(response));